{"version":3,"sources":["components/section-layout/SectionLayout.tsx","components/section-title/SectionTitle.tsx","components/modal/SimpleModal.tsx","components/task-report/SendReportForm.tsx","components/task-report/ReportHeader.tsx","components/task-report/ReportStage.tsx","components/vertical-stepper/VerticalStepper.tsx","containers/tasks/TaskReport.tsx"],"names":["SectionLayout","props","children","rest","Grid","container","direction","css","width","minHeight","displayName","SectionTitle","title","item","height","boxShadow","Paper","square","display","alignItems","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","SimpleModal","onClose","open","Modal","position","top","left","transform","padding","maxWidth","backgroundColor","colors","white","borderRadius","fontSize","xxLarge","right","color","gray","justifyContent","cursor","onClick","Close","small","SendReportForm","onSubmit","useState","email","setEmail","onSubmitCallback","useCallback","event","preventDefault","action","larger","marginBottom","onChange","target","value","placeholder","autoFocus","type","required","fullWidth","margin","reportStatusTranslations","EReportStatuses","IN_PROGRESS","ON_CHECK","DRAFT","COMPLETED","ReportHeader","headers","text","getFriendlyDate","Date","report","createdAt","status","normal","justify","marginTop","map","field","fieldKey","md","key","sNormal","columns","label","ReportStage","transformedTemplateData","templates","template","templateIndex","selected","index","version","deadline","fontWeight","hover","pagination","data","VerticalStepper","onMouseDown","onFocus","focused","last","checked","first","background","light","zIndex","border","primary","lightGray","TaskReport","taskId","context","useContext","AppContext","focusedBlockId","setFocusedBlockId","menuAnchorElement","setMenuAnchorElement","reportModalOpen","setReportModalOpen","setReport","onMenuClose","useEffect","getTaskReport","courier","then","response","catch","console","error","onSubmitSendReportCallback","sendReportToEmail","setSnackbarState","message","setSnackbarError","onDownloadFileReportCallback","downloadReportFile","IconButton","currentTarget","MoreVert","Menu","keepMounted","Boolean","anchorEl","MenuItem","maxTemplateWidth","stages","length","large","stage","friendlyIndex","id","finished"],"mappings":"4LAMaA,G,KAA6D,SAAAC,GAAU,IACxEC,EAAsBD,EAAtBC,SAAaC,EAD0D,YACjDF,EADiD,cAG/E,OACI,cAACG,EAAA,EAAD,eACIC,WAAS,EACTC,UAAU,SACVC,IAAK,CACDC,MAAO,OACPC,UAAW,UAEXN,GAEHD,KAKbF,EAAcU,YAAc,iB,yGCdfC,G,KAA6C,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOV,EAAe,EAAfA,SAChE,OACI,cAACE,EAAA,EAAD,CACIS,MAAI,EACJN,IAAK,CACDO,OAAQ,8BACRC,UAAW,wCAGf,cAACC,EAAA,EAAD,CACIC,QAAQ,EACRV,IAAK,CACDO,OAAQ,OACRI,QAAS,OACTC,WAAY,SACZJ,UAAW,oBAGf,cAACX,EAAA,EAAD,CACIC,WAAS,EACTE,IAAK,SAAAa,GAAK,MAAK,CACXC,YAAaD,EAAME,QAAQ,GAC3BC,aAAcH,EAAME,QAAQ,MAGhC,cAAClB,EAAA,EAAD,CAAMS,MAAI,EAACW,IAAE,GACT,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAC/B,0BAAOf,KAGdV,OAOrBS,EAAaD,YAAc,gB,gGCjCdkB,G,KAAgC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,KAAMtB,EAAsB,EAAtBA,MAAON,EAAe,EAAfA,SAClE,OACI,cAAC6B,EAAA,EAAD,CAAOD,OAAQA,EAAMD,QAASA,GAC1B,qBACItB,IAAK,SAAAa,GAAK,MAAK,CACXY,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,QAAShB,EAAME,QAAQ,GACvBe,SAAU,OACVC,gBAAiBlB,EAAMmB,OAAOC,MAC9BhC,MAAOA,GAASY,EAAME,QAAQ,GAC9BmB,aAAc,KAGlB,qBACIlC,IAAK,SAAAa,GAAK,MAAK,CACXsB,SAAUtB,EAAMsB,SAASC,QACzBX,SAAU,WACVC,IAAK,QACLW,MAAO,QACPC,MAAOzB,EAAMmB,OAAOC,MACpBF,gBAAiBlB,EAAMmB,OAAOO,KAC9BL,aAAc,MACdvB,QAAS,OACTC,WAAY,SACZ4B,eAAgB,SAChBvC,MAAO,MACPM,OAAQ,MACRkC,OAAQ,YAEZC,QAASpB,GAET,cAACqB,EAAA,EAAD,CAAW3C,IAAK,SAAAa,GAAK,MAAK,CAAEsB,SAAUtB,EAAMsB,SAASS,WAExDjD,MAMjB0B,EAAYlB,YAAc,e,oKC5Cb0C,EAAiD,SAAAnD,GAAU,IAC5DoD,EAAapD,EAAboD,SAD2D,EAGzCC,mBAAS,IAHgC,mBAG5DC,EAH4D,KAGrDC,EAHqD,KAK7DC,EAAmBC,uBACrB,SAACC,GACGA,EAAMC,iBACFP,GACAA,EAASE,KAGjB,CAACA,EAAOF,IAOZ,OACI,sBAAMQ,OAAO,GAAGR,SAAUI,GACtB,qBACIlD,IAAK,SAAAa,GAAK,MAAK,CACXsB,SAAUtB,EAAMsB,SAASoB,OACzBC,aAAc3C,EAAME,QAAQ,MAHpC,kOAQA,cAAC,aAAD,CACI0C,SAfZ,SAAuBL,GACnBH,EAASG,EAAMM,OAAOC,QAedA,MAAOX,EACPY,YAAY,+CACZC,WAAS,EACTC,KAAK,QACLC,UAAQ,EACRC,WAAS,IAEb,cAAC,SAAD,CACIF,KAAK,SACL9D,IAAK,SAAAa,GAAK,MAAK,CACXF,QAAS,OACTsD,OAAO,GAAD,OAAKpD,EAAME,QAAQ,GAAnB,cAGV,cAAC,WAAD,MAPJ,4DAcZ8B,EAAe1C,YAAc,iB,iCClDvB+D,GAAwB,mBACzBC,IAAgBC,YAAc,+CADL,cAEzBD,IAAgBE,SAAW,iEAFF,cAGzBF,IAAgBG,MAAQ,SAHC,cAIzBH,IAAgBI,UAAY,oDAJH,GAOjBC,EAA6C,SAAA9E,GACtD,IAAM+E,EAAU,CACZ,CACIpE,MAAO,iFACPqE,KAAM,oLAEV,CACIrE,MAAO,uFACPqE,KAAM,6PAEV,CACIrE,MAAO,kFACPqE,KAAM,gBAEV,CACIrE,MAAO,4EACPqE,KAAMC,0BAAgB,IAAIC,KAAKlF,EAAMmF,OAAOC,aAEhD,CACIzE,MAAO,uCACPqE,KAAMR,EAAyBxE,EAAMmF,OAAOE,UAIpD,OACI,cAAC,yBAAD,KACI,cAAClF,EAAA,EAAD,CAAMG,IAAK,SAAAa,GAAK,MAAK,CAAEgB,QAAShB,EAAME,QAAQ,MAC1C,cAACG,EAAA,EAAD,CAAYlB,IAAK,SAAAa,GAAK,MAAK,CAAEsB,SAAUtB,EAAMsB,SAAS6C,UACjDtF,EAAMW,OAGX,cAACR,EAAA,EAAD,CACIC,WAAS,EACTiB,QAAS,EACTkE,QAAQ,gBACRjF,IAAK,SAAAa,GAAK,MAAK,CAAEqE,UAAWrE,EAAME,QAAQ,MAEzC0D,EAAQU,KAAI,SAACC,EAAOC,GAAR,OACT,cAACxF,EAAA,EAAD,CAAMS,MAAI,EAACW,GAAI,GAAIqE,GAAG,OAAOC,IAAKF,GAC9B,cAACxF,EAAA,EAAD,CACIG,IAAK,SAAAa,GAAK,MAAK,CACXyB,MAAOzB,EAAMmB,OAAOO,KACpBJ,SAAUtB,EAAMsB,SAASqD,QACzBhC,aAAc3C,EAAME,QAAQ,MAG/BqE,EAAM/E,OAEX,cAACR,EAAA,EAAD,CAAMG,IAAK,SAAAa,GAAK,MAAK,CAAEsB,SAAUtB,EAAMsB,SAAS6C,UAC3CI,EAAMV,cAUvCF,EAAarE,YAAc,eCvE3B,IAAMsF,EAAqB,CACvB,CAAEF,IAAK,QAASG,MAAO,UACvB,CAAEH,IAAK,QAASG,MAAO,+FACvB,CAAEH,IAAK,YAAaG,MAAO,yFAC3B,CAAEH,IAAK,UAAWG,MAAO,sGAShBC,EAAyC,SAAAjG,GAClD,IAAMkG,EAA0BlG,EAAMmG,UAAUV,KAAI,SAACW,EAAUC,GAAX,MAA8B,CAC9EC,UAAU,EACVC,MAAOF,EAAgB,EACvB1F,MAAOyF,EAASzF,MAChByE,UAAWH,0BAAgB,IAAIC,KAAKkB,EAAShB,YAC7CoB,QAASJ,EAASI,YAGtB,OACI,cAAC,WAAD,KACI,cAAChF,EAAA,EAAD,CACIE,UAAU,MACVpB,IAAK,SAAAa,GAAK,MAAK,CACXsB,SAAUtB,EAAMsB,SAASoB,OACzBC,aAAc3C,EAAME,QAAQ,MAG/BrB,EAAMW,MAPX,KAOoBsE,0BAAgB,IAAIC,KAAKlF,EAAMyG,WAPnD,KASA,qBACInG,IAAK,SAAAa,GAAK,MAAK,CACXyB,MAAOzB,EAAMmB,OAAOO,KACpBJ,SAAUtB,EAAMsB,SAAS6C,OACzBxB,aAAc3C,EAAME,aAGxB,sBAAMf,IAAK,CAAEoG,WAAY,MAAzB,uEAPJ,mKASA,cAAC,QAAD,CACIC,OAAO,EACPC,YAAY,EACZb,QAASA,EACTc,KAAMX,MAMtBD,EAAYxF,YAAc,cCzCnB,IAAMqG,EAAmD,SAAA9G,GAAU,IAC9DuG,EAAyEvG,EAAzEuG,MAAOQ,EAAkE/G,EAAlE+G,YAAaC,EAAqDhH,EAArDgH,QAASC,EAA4CjH,EAA5CiH,QAASC,EAAmClH,EAAnCkH,KAAMC,EAA6BnH,EAA7BmH,QAASC,EAAoBpH,EAApBoH,MAAOnH,EAAaD,EAAbC,SACpE,OACI,cAAC,yBAAD,CACIK,IAAK,SAAAa,GAAK,MAAK,CACXgB,QAAQ,GAAD,OAAKhB,EAAME,QAAQ,GAAnB,YAAyBF,EAAME,QAAQ,IAC9C,UAAW,CAAEgG,WAAYlG,EAAMmB,OAAOgF,OACtCC,OAAQN,EAAU,KAAO,YAE7BA,QAASA,EACTF,YAAaA,EACbC,QAASA,GAET,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAS,GACrB,cAAClB,EAAA,EAAD,CAAMS,MAAI,EAACN,IAAK,CAAEyB,SAAU,aACxB,qBACIzB,IAAK,SAAAa,GAAK,MAAK,CACXZ,MAAOY,EAAME,QAAQ,GACrBR,OAAQM,EAAME,QAAQ,GACtBmB,aAAc,MACdgF,OAAO,aAAD,OAAerG,EAAMmB,OAAOmF,SAClCF,OAAQ,EACR3E,MAAOuE,EAAUhG,EAAMmB,OAAOC,MAAQ,UACtC8E,WAAYF,EAAUhG,EAAMmB,OAAOmF,QAAUtG,EAAMmB,OAAOC,MAC1DR,SAAU,WACVd,QAAS,OACTC,WAAY,SACZ4B,eAAgB,YAGnBqE,GAAW,cAAC,YAAD,OACVA,GAAWZ,GACT,qBACIjG,IAAK,SAAAa,GAAK,MAAK,CACXsB,SAAUtB,EAAMsB,SAASS,MACzBN,MAAOzB,EAAMmB,OAAOmF,WAGvBlB,KAIXa,GACE,qBACI9G,IAAK,SAAAa,GAAK,MAAK,CACXZ,MAAOY,EAAME,QAAQ,KACrBR,OAAQM,EAAME,QAAQ,GACtBgG,WAAYlG,EAAMmB,OAAOoF,UACzB3F,SAAU,WACVC,IAAKb,EAAME,SAAS,GACpBY,KAAM,EACNU,MAAO,EACP4B,OAAQ,OACRgD,OAAQ,OAIlBL,GACE,qBACI5G,IAAK,SAAAa,GAAK,MAAK,CACXZ,MAAOY,EAAME,QAAQ,KACrBR,OAAO,eAAD,OAAiBM,EAAME,QAAQ,GAA/B,KACNgG,WAAYlG,EAAMmB,OAAOoF,UACzB3F,SAAU,WACVC,IAAKb,EAAME,QAAQ,GACnBY,KAAM,EACNU,MAAO,EACP4B,OAAQ,OACRgD,OAAQ,OAKxB,cAACpH,EAAA,EAAD,CAAMS,MAAI,GAAEX,MAM5B6G,EAAgBrG,YAAc,kB,YC8DfkH,UAzIgC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxCC,EAAUC,qBAAWC,KADgC,EAGf1E,oBAAU,GAHK,mBAGpD2E,EAHoD,KAGpCC,EAHoC,OAIT5E,mBAA6B,MAJpB,mBAIpD6E,EAJoD,KAIjCC,EAJiC,OAKb9E,oBAAS,GALI,mBAKpD+E,EALoD,KAKnCC,EALmC,OAM/BhF,mBAAiC,MANF,mBAMpD8B,EANoD,KAM5CmD,EAN4C,KAiB3D,SAASC,IACLJ,EAAqB,MAVzBK,qBAAU,WACNC,YAAcZ,EAAQa,QAASd,GAC1Be,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASzD,WACpC0D,MAAMC,QAAQC,SACpB,CAAClB,EAAQa,QAASd,IAarB,IAAMoB,EAA6BvF,uBAC/B,SAACH,GACG+E,GAAmB,GACnBY,YAAkBpB,EAAQa,QAASd,EAAQtE,GACtCqF,MAAK,kBACFd,EAAQqB,iBAAiB,CACrBrH,MAAM,EACNsH,QAAQ,sGAAD,OAAwB7F,QAGtCuF,OAAM,WACHhB,EAAQuB,kBAAiB,GACzBvB,EAAQqB,iBAAiB,CACrBrH,MAAM,EACNsH,QAAQ,8JAAD,OAAmC7F,UAI1D,CAACuE,EAASD,IAGRyB,EAA+B5F,uBAAY,WAC7C8E,IACAe,YAAmBzB,EAAQa,QAASd,GAAQiB,OAAM,WAC9ChB,EAAQuB,kBAAiB,GACzBvB,EAAQqB,iBAAiB,CACrBrH,MAAM,EACNsH,QAAQ,uJAGjB,CAACtB,EAASD,IAMb,OACI,cAAC,IAAD,KACI,cAAC,IAAD,CAAarH,MAAO,IAAKsB,KAAMuG,EAAiBxG,QANxD,WACIyG,GAAmB,KAMX,cAAC,EAAD,CAAgBjF,SAAU4F,KAE9B,cAAC,IAAD,CAAcrI,MAAM,0FAChB,cAACR,EAAA,EAAD,CAAMS,MAAI,GACN,cAAC2I,EAAA,EAAD,CAAYvG,QAtD5B,SAAqBU,GACjByE,EAAqBzE,EAAM8F,iBAsDX,cAACC,EAAA,EAAD,QAGR,cAACC,EAAA,EAAD,CACIC,aAAW,EACX9H,KAAM+H,QAAQ1B,GACd2B,SAAU3B,EACVtG,QAAS2G,GAET,cAACuB,EAAA,EAAD,CAAU9G,QAASqG,GAAnB,oFACA,cAACS,EAAA,EAAD,CAAU9G,QA3D1B,WACIuF,IACAF,GAAmB,KAyDP,+EAGR,cAAClI,EAAA,EAAD,CACIG,IAAK,SAAAa,GAAK,MAAK,CACXiB,SAAUjB,EAAM4I,iBAChBxF,OAAQpD,EAAME,QAAQ,GACtBU,SAAU,cAGboD,GAAU,cAAC,EAAD,CAAcxE,MAAOwE,EAAOxE,MAAOwE,OAAQA,IACrDA,GAAUA,EAAO6E,OAAOC,OAAS,GAC9B,cAACzI,EAAA,EAAD,CACIlB,IAAK,gBAAGe,EAAH,EAAGA,QAASoB,EAAZ,EAAYA,SAAUH,EAAtB,EAAsBA,OAAtB,MAAoC,CACrCG,SAAUA,EAASyH,MACnB/H,QAAQ,IAAD,OAAMd,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkCA,IAAlC,KACPgB,gBAAiBC,EAAOC,SAJhC,uEAUH4C,GACGA,EAAO6E,OAAOvE,KAAI,SAAC0E,EAAO5D,GAStB,IAAM6D,EAAgB7D,EAAQ,EAE9B,OACI,cAAC,EAAD,CACIV,IAAKsE,EAAME,GACX9D,MAAO6D,EACPjD,QAASgD,EAAMG,SACfrD,QAASe,IAAmBmC,EAAME,GAClCtD,YAhBR,WACIkB,EAAkBkC,EAAME,KAgBpBrD,QAbR,WACIiB,EAAkBkC,EAAME,KAapBjD,OAAQb,EACRW,KAAMkD,IAAkBjF,EAAO6E,OAAOC,QAEtC,cAAC,EAAD,CACItJ,MAAOwJ,EAAMxJ,MACb8F,SAAU0D,EAAM1D,SAChBN,UAAWgE,EAAMhE","file":"static/js/10.9338c773.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\n\nexport const SectionLayout: React.FC<React.ComponentProps<typeof Grid>> = props => {\n    const { children, ...rest } = props;\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={{\n                width: \"100%\",\n                minHeight: \"100vh\",\n            }}\n            {...rest}\n        >\n            {children}\n        </Grid>\n    );\n};\n\nSectionLayout.displayName = \"SectionLayout\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={{\n                height: \"var(--section-title-height)\",\n                boxShadow: \"0 6px 20px rgba(220, 227, 235, 0.3)\",\n            }}\n        >\n            <Paper\n                square={true}\n                css={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    boxShadow: \"none !important\",\n                }}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n\nSectionTitle.displayName = \"SectionTitle\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Modal } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport * as React from \"react\";\n\ninterface IProps {\n    open?: boolean;\n    width?: number | string;\n\n    onClose?(): void;\n}\n\nexport const SimpleModal: React.FC<IProps> = ({ onClose, open, width, children }) => {\n    return (\n        <Modal open={!!open} onClose={onClose}>\n            <div\n                css={theme => ({\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    padding: theme.spacing(6),\n                    maxWidth: \"100%\",\n                    backgroundColor: theme.colors.white,\n                    width: width || theme.spacing(6),\n                    borderRadius: 6,\n                })}\n            >\n                <div\n                    css={theme => ({\n                        fontSize: theme.fontSize.xxLarge,\n                        position: \"absolute\",\n                        top: \"-.5em\",\n                        right: \"-.5em\",\n                        color: theme.colors.white,\n                        backgroundColor: theme.colors.gray,\n                        borderRadius: \"50%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        width: \"1em\",\n                        height: \"1em\",\n                        cursor: \"pointer\",\n                    })}\n                    onClick={onClose}\n                >\n                    <CloseIcon css={theme => ({ fontSize: theme.fontSize.small })} />\n                </div>\n                {children}\n            </div>\n        </Modal>\n    );\n};\n\nSimpleModal.displayName = \"SimpleModal\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Button, InputField } from \"@magnit/components\";\nimport { SendIcon } from \"@magnit/icons\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\n\ninterface ISendReportFormProps {\n    onSubmit?(email: string): void;\n}\n\nexport const SendReportForm: React.FC<ISendReportFormProps> = props => {\n    const { onSubmit } = props;\n\n    const [email, setEmail] = useState(\"\");\n\n    const onSubmitCallback = useCallback(\n        (event: React.FormEvent) => {\n            event.preventDefault();\n            if (onSubmit) {\n                onSubmit(email);\n            }\n        },\n        [email, onSubmit],\n    );\n\n    function onEmailChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEmail(event.target.value);\n    }\n\n    return (\n        <form action=\"\" onSubmit={onSubmitCallback}>\n            <div\n                css={theme => ({\n                    fontSize: theme.fontSize.larger,\n                    marginBottom: theme.spacing(2),\n                })}\n            >\n                Введите email, на который будет отправлен отчет\n            </div>\n            <InputField\n                onChange={onEmailChange}\n                value={email}\n                placeholder=\"Эл. почта\"\n                autoFocus\n                type=\"email\"\n                required\n                fullWidth\n            />\n            <Button\n                type=\"submit\"\n                css={theme => ({\n                    display: \"flex\",\n                    margin: `${theme.spacing(6)} auto 0`,\n                })}\n            >\n                <SendIcon />\n                Отправить\n            </Button>\n        </form>\n    );\n};\n\nSendReportForm.displayName = \"SendReportForm\";\n","/** @jsx jsx */\n\nimport { SelectableBlockWrapper } from \"@magnit/components\";\nimport { getFriendlyDate } from \"@magnit/services\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { EReportStatuses, IReportResponse } from \"services/api/tasks\";\n\ninterface IReportHeaderProps {\n    report: IReportResponse;\n    title: string;\n}\n\nconst reportStatusTranslations = {\n    [EReportStatuses.IN_PROGRESS]: \"В работе\",\n    [EReportStatuses.ON_CHECK]: \"На проверке\",\n    [EReportStatuses.DRAFT]: \"Draft\",\n    [EReportStatuses.COMPLETED]: \"Завершен\",\n};\n\nexport const ReportHeader: React.FC<IReportHeaderProps> = props => {\n    const headers = [\n        {\n            title: \"АДМИНИСТРАТОР\",\n            text: \"Терещенко Геннадий Владимирович\",\n        },\n        {\n            title: \"МЕСТОПОЛОЖЕНИЕ\",\n            text: \"Челябинская область, Челябинск, улица Железная, 5\",\n        },\n        {\n            title: \"ФОРМАТ ОБЪЕКТА\",\n            text: \"МК\",\n        },\n        {\n            title: \"ДАТА СОЗДАНИЯ\",\n            text: getFriendlyDate(new Date(props.report.createdAt)),\n        },\n        {\n            title: \"СТАТУС\",\n            text: reportStatusTranslations[props.report.status],\n        },\n    ];\n\n    return (\n        <SelectableBlockWrapper>\n            <Grid css={theme => ({ padding: theme.spacing(4) })}>\n                <Typography css={theme => ({ fontSize: theme.fontSize.normal })}>\n                    {props.title}\n                </Typography>\n\n                <Grid\n                    container\n                    spacing={2}\n                    justify=\"space-between\"\n                    css={theme => ({ marginTop: theme.spacing(2) })}\n                >\n                    {headers.map((field, fieldKey) => (\n                        <Grid item xs={12} md=\"auto\" key={fieldKey}>\n                            <Grid\n                                css={theme => ({\n                                    color: theme.colors.gray,\n                                    fontSize: theme.fontSize.sNormal,\n                                    marginBottom: theme.spacing(1),\n                                })}\n                            >\n                                {field.title}\n                            </Grid>\n                            <Grid css={theme => ({ fontSize: theme.fontSize.normal })}>\n                                {field.text}\n                            </Grid>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </SelectableBlockWrapper>\n    );\n};\n\nReportHeader.displayName = \"ReportHeader\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { IColumn, Table } from \"@magnit/components\";\nimport { getFriendlyDate } from \"@magnit/services\";\nimport { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { IReportStageTemplate } from \"services/api/tasks\";\n\nconst columns: IColumn[] = [\n    { key: \"index\", label: \"№\" },\n    { key: \"title\", label: \"Название шаблона\" },\n    { key: \"createdAt\", label: \"Дата добавления\" },\n    { key: \"version\", label: \"Количество правок\" },\n];\n\ninterface ITaskStageProps {\n    title: string;\n    deadline: string;\n    templates: IReportStageTemplate[];\n}\n\nexport const ReportStage: React.FC<ITaskStageProps> = props => {\n    const transformedTemplateData = props.templates.map((template, templateIndex) => ({\n        selected: false,\n        index: templateIndex + 1,\n        title: template.title,\n        createdAt: getFriendlyDate(new Date(template.createdAt)),\n        version: template.version,\n    }));\n\n    return (\n        <React.Fragment>\n            <Typography\n                component=\"div\"\n                css={theme => ({\n                    fontSize: theme.fontSize.larger,\n                    marginBottom: theme.spacing(2),\n                })}\n            >\n                {props.title} ({getFriendlyDate(new Date(props.deadline))})\n            </Typography>\n            <div\n                css={theme => ({\n                    color: theme.colors.gray,\n                    fontSize: theme.fontSize.normal,\n                    marginBottom: theme.spacing(),\n                })}\n            >\n                <span css={{ fontWeight: 500 }}>Исполнитель:</span> Рукастый Иннокентий Петрович\n            </div>\n            <Table\n                hover={false}\n                pagination={false}\n                columns={columns}\n                data={transformedTemplateData}\n            />\n        </React.Fragment>\n    );\n};\n\nReportStage.displayName = \"ReportStage\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { SelectableBlockWrapper } from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\nimport { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface IVerticalStepperProps {\n    focused?: boolean;\n    checked?: boolean;\n    index?: number;\n    first?: boolean;\n    last?: boolean;\n\n    onMouseDown?(): void;\n\n    onFocus?(): void;\n}\n\nexport const VerticalStepper: React.FC<IVerticalStepperProps> = props => {\n    const { index, onMouseDown, onFocus, focused, last, checked, first, children } = props;\n    return (\n        <SelectableBlockWrapper\n            css={theme => ({\n                padding: `${theme.spacing(3)} ${theme.spacing(4)}`,\n                \"&:hover\": { background: theme.colors.light },\n                zIndex: focused ? 1300 : \"initial\",\n            })}\n            focused={focused}\n            onMouseDown={onMouseDown}\n            onFocus={onFocus}\n        >\n            <Grid container spacing={2}>\n                <Grid item css={{ position: \"relative\" }}>\n                    <div\n                        css={theme => ({\n                            width: theme.spacing(3),\n                            height: theme.spacing(3),\n                            borderRadius: \"50%\",\n                            border: `2px solid ${theme.colors.primary}`,\n                            zIndex: 2,\n                            color: checked ? theme.colors.white : \"initial\",\n                            background: checked ? theme.colors.primary : theme.colors.white,\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        })}\n                    >\n                        {checked && <CheckIcon />}\n                        {!checked && index && (\n                            <div\n                                css={theme => ({\n                                    fontSize: theme.fontSize.small,\n                                    color: theme.colors.primary,\n                                })}\n                            >\n                                {index}\n                            </div>\n                        )}\n                    </div>\n                    {!first && (\n                        <div\n                            css={theme => ({\n                                width: theme.spacing(0.25),\n                                height: theme.spacing(3),\n                                background: theme.colors.lightGray,\n                                position: \"absolute\",\n                                top: theme.spacing(-2),\n                                left: 0,\n                                right: 0,\n                                margin: \"auto\",\n                                zIndex: 1,\n                            })}\n                        />\n                    )}\n                    {!last && (\n                        <div\n                            css={theme => ({\n                                width: theme.spacing(0.25),\n                                height: `calc(100% - ${theme.spacing(2)})`,\n                                background: theme.colors.lightGray,\n                                position: \"absolute\",\n                                top: theme.spacing(4),\n                                left: 0,\n                                right: 0,\n                                margin: \"auto\",\n                                zIndex: 1,\n                            })}\n                        />\n                    )}\n                </Grid>\n                <Grid item>{children}</Grid>\n            </Grid>\n        </SelectableBlockWrapper>\n    );\n};\n\nVerticalStepper.displayName = \"VerticalStepper\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid, IconButton, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\nimport { SimpleModal } from \"components/modal\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { ReportHeader, ReportStage, SendReportForm } from \"components/task-report\";\nimport { VerticalStepper } from \"components/vertical-stepper\";\nimport { AppContext } from \"context\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n    downloadReportFile,\n    getTaskReport,\n    IReportResponse,\n    sendReportToEmail,\n} from \"services/api/tasks\";\n\nexport interface ITaskReportProps {\n    taskId: number;\n}\n\nconst TaskReport: React.FC<ITaskReportProps> = ({ taskId }) => {\n    const context = useContext(AppContext);\n\n    const [focusedBlockId, setFocusedBlockId] = useState(-1);\n    const [menuAnchorElement, setMenuAnchorElement] = useState<null | HTMLElement>(null);\n    const [reportModalOpen, setReportModalOpen] = useState(false);\n    const [report, setReport] = useState<IReportResponse | null>(null);\n\n    useEffect(() => {\n        getTaskReport(context.courier, taskId)\n            .then(response => setReport(response.report))\n            .catch(console.error);\n    }, [context.courier, taskId]);\n\n    function onMenuClick(event: React.MouseEvent<HTMLButtonElement>) {\n        setMenuAnchorElement(event.currentTarget);\n    }\n    function onMenuClose() {\n        setMenuAnchorElement(null);\n    }\n    function onOpenSendReportMenuItem() {\n        onMenuClose();\n        setReportModalOpen(true);\n    }\n\n    const onSubmitSendReportCallback = useCallback(\n        (email: string) => {\n            setReportModalOpen(false);\n            sendReportToEmail(context.courier, taskId, email)\n                .then(() =>\n                    context.setSnackbarState({\n                        open: true,\n                        message: `Отчёт отправлен на ${email}`,\n                    }),\n                )\n                .catch(() => {\n                    context.setSnackbarError(true);\n                    context.setSnackbarState({\n                        open: true,\n                        message: `Не удалось отправить отчёт на ${email}`,\n                    });\n                });\n        },\n        [context, taskId],\n    );\n\n    const onDownloadFileReportCallback = useCallback(() => {\n        onMenuClose();\n        downloadReportFile(context.courier, taskId).catch(() => {\n            context.setSnackbarError(true);\n            context.setSnackbarState({\n                open: true,\n                message: `Не удалось загрузить отчёт`,\n            });\n        });\n    }, [context, taskId]);\n\n    function onPopupClose() {\n        setReportModalOpen(false);\n    }\n\n    return (\n        <SectionLayout>\n            <SimpleModal width={370} open={reportModalOpen} onClose={onPopupClose}>\n                <SendReportForm onSubmit={onSubmitSendReportCallback} />\n            </SimpleModal>\n            <SectionTitle title=\"Отчет по заданию\">\n                <Grid item>\n                    <IconButton onClick={onMenuClick}>\n                        <MoreVertIcon />\n                    </IconButton>\n                </Grid>\n                <Menu\n                    keepMounted\n                    open={Boolean(menuAnchorElement)}\n                    anchorEl={menuAnchorElement}\n                    onClose={onMenuClose}\n                >\n                    <MenuItem onClick={onDownloadFileReportCallback}>Скачать отчет (.xls)</MenuItem>\n                    <MenuItem onClick={onOpenSendReportMenuItem}>Отправить на email</MenuItem>\n                </Menu>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                {report && <ReportHeader title={report.title} report={report} />}\n                {report && report.stages.length > 0 && (\n                    <Typography\n                        css={({ spacing, fontSize, colors }) => ({\n                            fontSize: fontSize.large,\n                            padding: ` ${spacing(5)} ${spacing(4)} ${spacing()} `,\n                            backgroundColor: colors.white,\n                        })}\n                    >\n                        Этапы работы\n                    </Typography>\n                )}\n                {report &&\n                    report.stages.map((stage, index) => {\n                        function onMouseDown() {\n                            setFocusedBlockId(stage.id);\n                        }\n\n                        function onFocus() {\n                            setFocusedBlockId(stage.id);\n                        }\n\n                        const friendlyIndex = index + 1;\n\n                        return (\n                            <VerticalStepper\n                                key={stage.id}\n                                index={friendlyIndex}\n                                checked={stage.finished}\n                                focused={focusedBlockId === stage.id}\n                                onMouseDown={onMouseDown}\n                                onFocus={onFocus}\n                                first={!index}\n                                last={friendlyIndex === report.stages.length}\n                            >\n                                <ReportStage\n                                    title={stage.title}\n                                    deadline={stage.deadline}\n                                    templates={stage.templates}\n                                />\n                            </VerticalStepper>\n                        );\n                    })}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\nexport default TaskReport;\n"],"sourceRoot":""}