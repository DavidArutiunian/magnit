{"version":3,"sources":["components/modal/SimpleModal.tsx","components/view-task/SendMessageForm.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","exceptions/NoStagesException.ts","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","containers/tasks/ViewTask.tsx"],"names":["SimpleModal","onClose","open","width","children","Modal","css","theme","position","top","left","transform","padding","spacing","maxWidth","backgroundColor","colors","white","borderRadius","fontSize","xxLarge","right","color","gray","display","alignItems","justifyContent","height","cursor","onClick","Close","small","displayName","SendMessageForm","props","onSubmit","useState","title","setTitle","message","setMessage","onSubmitCallback","useCallback","event","preventDefault","action","Grid","container","item","xs","larger","marginBottom","onChange","target","value","placeholder","autoFocus","type","required","fullWidth","multiline","margin","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","create","enumerable","writable","configurable","NoStagesException","subClass","superClass","Derived","result","Super","NewTarget","Error","ViewTask","taskId","users","context","useContext","AppContext","menuAnchorElement","setMenuAnchorElement","templates","setTemplates","messageModalOpen","setMessageModalOpen","id","stages","documents","marketplace","address","city","format","region","status","ETaskStatus","DRAFT","task","setTask","trigger","to","redirect","setRedirect","marketplaceRegions","setMarketplaceRegions","regionCities","setRegionCities","cityFormats","setCityFormats","formatAddresses","setFormatAddresses","isValidTask","_","initialStages","useRef","isTaskEditable","IN_PROGRESS","COMPLETED","setTaskState","response","current","cloneDeep","fetchFormatsAndUpdateState","getFormatsForCity","courier","then","formats","catch","console","error","fetchRegionsAndUpdateState","getAllRegions","regions","fetchCitiesAndUpdateState","getCitiesForRegion","cities","fetchAddressesAndUpdateState","getAddressesForFormat","addresses","setTemplateState","nextTask","buffer","forEach","template","data","index","array","find","merge","fetchTaskAndUpdateState","getTaskExtended","toNumber","getTemplates","Promise","all","prevTaskId","useEffect","prevTaskRegion","prevTaskCity","prevTaskFormat","onMenuClose","addTaskStages","findIfStageExists","stage","initialStage","filterEmptyStages","step","deadline","diff","filter","map","splitted","split","date","setDate","Number","first","setMonth","nth","setFullYear","toISOString","length","addStages","onTaskSaveCallback","prevStatus","ON_CHECK","EXPIRED","callUpdateTemplateAssignment","editable","updateTemplateAssignment","transformedTemplateAssignments","assignment","addTemplateAssignment","updateTask","getTaskPayload","setSnackbarState","setSnackbarError","onAddTaskDocument","document","addTaskDocument","onDeleteTaskDocument","documentId","deleteTaskDocument","onAddComment","comment","addComment","idAssignment","text","onDeleteComment","commentId","deleteComment","sendPushToken","body","noThrow","variant","scheme","Typography","IconButton","currentTarget","MoreVert","Menu","keepMounted","Boolean","anchorEl","MenuItem","maxTemplateWidth","onTaskChange","onDeleteAsset","onAddAsset","omit"],"mappings":"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","file":"static/js/13.22293346.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Modal } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport * as React from \"react\";\n\ninterface IProps {\n    open?: boolean;\n    width?: number | string;\n\n    onClose?(): void;\n}\n\nexport const SimpleModal: React.FC<IProps> = ({ onClose, open, width, children }) => {\n    return (\n        <Modal open={!!open} onClose={onClose}>\n            <div\n                css={theme => ({\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    padding: theme.spacing(6),\n                    maxWidth: \"100%\",\n                    backgroundColor: theme.colors.white,\n                    width: width || theme.spacing(6),\n                    borderRadius: 6,\n                })}\n            >\n                <div\n                    css={theme => ({\n                        fontSize: theme.fontSize.xxLarge,\n                        position: \"absolute\",\n                        top: \"-.5em\",\n                        right: \"-.5em\",\n                        color: theme.colors.white,\n                        backgroundColor: theme.colors.gray,\n                        borderRadius: \"50%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        width: \"1em\",\n                        height: \"1em\",\n                        cursor: \"pointer\",\n                    })}\n                    onClick={onClose}\n                >\n                    <CloseIcon css={theme => ({ fontSize: theme.fontSize.small })} />\n                </div>\n                {children}\n            </div>\n        </Modal>\n    );\n};\n\nSimpleModal.displayName = \"SimpleModal\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Button, InputField } from \"@magnit/components\";\nimport { SendIcon } from \"@magnit/icons\";\nimport { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\n\ninterface ISendMessageFormProps {\n    onSubmit?(title: string, message: string): void;\n}\n\nexport const SendMessageForm: React.FC<ISendMessageFormProps> = props => {\n    const { onSubmit } = props;\n\n    const [title, setTitle] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    const onSubmitCallback = useCallback(\n        (event: React.FormEvent) => {\n            event.preventDefault();\n            if (onSubmit) {\n                onSubmit(title, message);\n            }\n        },\n        [title, message, onSubmit],\n    );\n\n    function onChangeTitle(event: React.ChangeEvent<HTMLInputElement>) {\n        setTitle(event.target.value);\n    }\n\n    function onChangeMessage(event: React.ChangeEvent<HTMLInputElement>) {\n        setMessage(event.target.value);\n    }\n\n    return (\n        <form action=\"\" onSubmit={onSubmitCallback}>\n            <Grid container>\n                <Grid\n                    item\n                    xs={12}\n                    css={theme => ({\n                        fontSize: theme.fontSize.larger,\n                        marginBottom: theme.spacing(2),\n                    })}\n                >\n                    Новое сообщение\n                </Grid>\n                <Grid item xs={12}>\n                    <InputField\n                        onChange={onChangeTitle}\n                        value={title}\n                        placeholder=\"Заголовок\"\n                        autoFocus\n                        type=\"text\"\n                        required\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <InputField\n                        onChange={onChangeMessage}\n                        value={message}\n                        placeholder=\"Текст сообщения\"\n                        autoFocus\n                        type=\"text\"\n                        required\n                        fullWidth\n                        multiline\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        css={theme => ({\n                            display: \"flex\",\n                            margin: `${theme.spacing(6)} auto 0`,\n                        })}\n                    >\n                        <SendIcon />\n                        Отправить\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nSendMessageForm.displayName = \"SendMessageForm\";\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export class NoStagesException extends Error {}\n","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Button } from \"@magnit/components\";\nimport {\n    ETaskStatus,\n    IComment,\n    IExtendedDocument,\n    IExtendedTask,\n    IStage,\n    ITemplate,\n    ITemplateDocument,\n    IUser,\n} from \"@magnit/entities\";\nimport { SendIcon } from \"@magnit/icons\";\nimport { TaskEditor } from \"@magnit/task-editor\";\nimport { Grid, IconButton, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\nimport { Redirect } from \"@reach/router\";\nimport { SimpleModal } from \"components/modal\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { SendMessageForm } from \"components/view-task\";\nimport { AppContext } from \"context\";\nimport { NoStagesException } from \"exceptions\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport {\n    addComment,\n    addStages,\n    addTaskDocument,\n    addTemplateAssignment,\n    deleteComment,\n    deleteTaskDocument,\n    getAddressesForFormat,\n    getAllRegions,\n    getCitiesForRegion,\n    getFormatsForCity,\n    getTaskExtended,\n    getTemplates,\n    IGetTaskExtendedResponse,\n    IGetTemplatesResponse,\n    sendPushToken,\n    updateTask,\n    updateTemplateAssignment,\n} from \"services/api\";\n\nexport interface IViewTaskProps {\n    taskId: number;\n    users: IUser[];\n}\n\ninterface IEditableTemplate extends ITemplate {\n    editable: boolean;\n}\n\ntype TDocumentWithAnswers = ITemplateDocument & IExtendedDocument;\n\nconst ViewTask: React.FC<IViewTaskProps> = props => {\n    const { taskId, users } = props;\n\n    const context = useContext(AppContext);\n\n    // dot menu\n    const [menuAnchorElement, setMenuAnchorElement] = useState<null | HTMLElement>(null);\n\n    // all templates\n    const [templates, setTemplates] = useState<ITemplate[]>([]);\n\n    // modal\n    const [messageModalOpen, setMessageModalOpen] = useState(false);\n\n    // task state\n    const [task, setTask] = useState<IExtendedTask>({\n        id: 0,\n        title: \"\",\n        templates: [],\n        stages: [],\n        documents: [],\n        marketplace: {\n            address: \"\",\n            city: \"\",\n            format: \"\",\n            region: \"\",\n        },\n        status: ETaskStatus.DRAFT,\n    });\n\n    // redirect\n    const [redirect, setRedirect] = useState({\n        trigger: false,\n        to: \"\",\n    });\n\n    // marketplace\n    const [marketplaceRegions, setMarketplaceRegions] = useState<string[]>([]);\n    const [regionCities, setRegionCities] = useState<string[]>([]);\n    const [cityFormats, setCityFormats] = useState<string[]>([]);\n    const [formatAddresses, setFormatAddresses] = useState<string[]>([]);\n\n    const region = (task.marketplace || {}).region;\n    const city = (task.marketplace || {}).city;\n    const format = (task.marketplace || {}).format;\n\n    const isValidTask = (value: object): value is IExtendedTask =>\n        _.has(value, \"id\") &&\n        _.has(value, \"title\") &&\n        _.has(value, \"templates\") &&\n        _.has(value, \"stages\");\n\n    const initialStages = useRef<IExtendedTask[\"stages\"]>([]);\n\n    const isTaskEditable = (task: IExtendedTask) =>\n        task.status !== ETaskStatus.IN_PROGRESS && task.status !== ETaskStatus.COMPLETED;\n\n    const setTaskState = useCallback((response: IGetTaskExtendedResponse) => {\n        if (isValidTask(response.task)) {\n            initialStages.current = _.cloneDeep(response.task.stages);\n            setTask({ ...response.task });\n            return response.task;\n        }\n    }, []);\n\n    const fetchFormatsAndUpdateState = useCallback(\n        (region: string, city: string) => {\n            getFormatsForCity(context.courier, region, city)\n                .then(response => setCityFormats(response.formats))\n                .catch(console.error);\n        },\n        [context.courier],\n    );\n\n    const fetchRegionsAndUpdateState = useCallback(() => {\n        getAllRegions(context.courier)\n            .then(response => setMarketplaceRegions(response.regions))\n            .catch(console.error);\n    }, [context.courier]);\n\n    const fetchCitiesAndUpdateState = useCallback(\n        (region: string) => {\n            getCitiesForRegion(context.courier, region)\n                .then(response => setRegionCities(response.cities))\n                .catch(console.error);\n        },\n        [context.courier],\n    );\n\n    const fetchAddressesAndUpdateState = useCallback(\n        (region: string, city: string, format: string) => {\n            getAddressesForFormat(context.courier, region, city, format)\n                .then(response => setFormatAddresses(response.addresses))\n                .catch(console.error);\n        },\n        [context.courier],\n    );\n\n    function setTemplateState(response: IGetTemplatesResponse, nextTask: IExtendedTask) {\n        const buffer: ITemplate[] = [];\n        response.templates.forEach(template => buffer.push(template));\n        buffer.forEach((data, index, array) => {\n            const template = nextTask.templates.find(template => template.id === data.id);\n            if (template) {\n                array[index] = _.merge(data, template);\n            }\n        });\n        setTemplates([...buffer]);\n    }\n\n    const fetchTaskAndUpdateState = useCallback(() => {\n        getTaskExtended(context.courier, _.toNumber(taskId))\n            .then(setTaskState)\n            .then(async nextTask => {\n                if (!nextTask || !isTaskEditable(nextTask)) {\n                    return;\n                }\n                const response = await getTemplates(context.courier);\n\n                setTemplateState(response, nextTask);\n\n                if (nextTask.marketplace) {\n                    const { city, region, format } = nextTask.marketplace;\n                    await Promise.all([\n                        fetchRegionsAndUpdateState(),\n                        fetchCitiesAndUpdateState(region),\n                        fetchFormatsAndUpdateState(region, city),\n                        fetchAddressesAndUpdateState(region, city, format),\n                    ]).catch(console.error);\n                }\n            })\n            .catch(console.error);\n    }, [\n        context.courier,\n        fetchAddressesAndUpdateState,\n        fetchCitiesAndUpdateState,\n        fetchFormatsAndUpdateState,\n        fetchRegionsAndUpdateState,\n        setTaskState,\n        taskId,\n    ]);\n\n    const prevTaskId = useRef<number | null>(null);\n    useEffect(() => {\n        if (prevTaskId.current !== taskId) {\n            prevTaskId.current = taskId;\n            fetchTaskAndUpdateState();\n        }\n    }, [fetchTaskAndUpdateState, taskId]);\n\n    useEffect(() => {\n        // only draft mode contains marketplace selects\n        if (task.status !== ETaskStatus.DRAFT) {\n            return;\n        }\n        fetchRegionsAndUpdateState();\n    }, [fetchRegionsAndUpdateState, task.status]);\n\n    // get all regions initially\n    const prevTaskRegion = useRef(region);\n    useEffect(() => {\n        if (!(region && prevTaskRegion.current !== region)) {\n            return;\n        }\n        fetchCitiesAndUpdateState(region);\n    }, [fetchCitiesAndUpdateState, region]);\n\n    // fetching all available formats for city\n    // if task marketplace city has changed\n    const prevTaskCity = useRef(city);\n    useEffect(() => {\n        if (!(city && region && prevTaskCity.current !== city)) {\n            return;\n        }\n        fetchFormatsAndUpdateState(region, city);\n    }, [region, city, fetchFormatsAndUpdateState]);\n\n    // fetching all available addresses for format\n    // if task marketplace format has changed\n    const prevTaskFormat = useRef(format);\n    useEffect(() => {\n        if (!(city && region && format && prevTaskFormat.current !== format)) {\n            return;\n        }\n        fetchAddressesAndUpdateState(region, city, format);\n    }, [format, region, city, fetchAddressesAndUpdateState]);\n\n    function onTaskChange(task: Partial<IExtendedTask>): void {\n        if (isValidTask(task)) {\n            setTask({ ...task });\n        }\n    }\n\n    function onMenuClick(event: React.MouseEvent<HTMLButtonElement>) {\n        setMenuAnchorElement(event.currentTarget);\n    }\n\n    function onMenuClose() {\n        setMenuAnchorElement(null);\n    }\n\n    function onTaskHistoryClick() {\n        setRedirect({ to: `/tasks/${taskId}/history`, trigger: true });\n        onMenuClose();\n    }\n\n    function onTaskReportClick() {\n        setRedirect({ to: `/tasks/${taskId}/report`, trigger: true });\n        onMenuClose();\n    }\n\n    const addTaskStages = useCallback(\n        async (task: IExtendedTask) => {\n            const findIfStageExists = (stage: IStage) =>\n                !initialStages.current.find(initialStage => initialStage.id === stage.id);\n\n            const filterEmptyStages = (step: IStage) => step.title && step.deadline;\n\n            const diff = task.stages\n                // filter so that add only stages that doesn't exist\n                .filter(findIfStageExists)\n                // filter empty\n                .filter(filterEmptyStages)\n                .map(stage => {\n                    // TODO: mask input for date\n                    const splitted = stage.deadline.split(\".\");\n                    const date = new Date();\n                    date.setDate(Number(_.first(splitted)));\n                    date.setMonth(Number(_.nth(splitted, 1)) - 1);\n                    date.setFullYear(Number(_.nth(splitted, 2)));\n                    return { ...stage, deadline: new Date(date).toISOString() };\n                });\n            // throw error if overall no task stages found\n            const validTaskStages = task.stages.filter(stage => stage.title && stage.deadline);\n            if (validTaskStages.length + diff.length === 0) {\n                throw new NoStagesException();\n            }\n            if (!diff.length) {\n                return;\n            }\n            return addStages(context.courier, taskId, diff);\n        },\n        [context.courier, taskId],\n    );\n\n    const onTaskSaveCallback = useCallback((): void => {\n        const prevStatus = task.status;\n        // disallow update if task is not editable\n        if (!isTaskEditable(task)) {\n            return;\n        }\n        // sending from DRAFT to IN_PROGRESS\n        // only this transition is allowed\n        if (\n            task.status === ETaskStatus.DRAFT ||\n            task.status === ETaskStatus.ON_CHECK ||\n            task.status === ETaskStatus.EXPIRED\n        ) {\n            task.status = ETaskStatus.IN_PROGRESS;\n        }\n\n        const templateAssignmentExists = (assignment: TDocumentWithAnswers) =>\n            templates.find(template => template.id === assignment.id);\n\n        const templateIdToNumber = (template: TDocumentWithAnswers) => Number(template.id);\n\n        const callUpdateTemplateAssignment = ({ id, editable }: TDocumentWithAnswers) =>\n            updateTemplateAssignment(context.courier, taskId, Number(id), { editable });\n\n        const transformedTemplateAssignments = (task.templates || [])\n            .filter(templateAssignmentExists)\n            .map(templateIdToNumber);\n\n        const addAllTemplateAssignments = () =>\n            Promise.all(task.templates.map(callUpdateTemplateAssignment));\n\n        Promise.all([\n            addTemplateAssignment(\n                context.courier,\n                Number(taskId),\n                transformedTemplateAssignments,\n            ).then(addAllTemplateAssignments),\n            addTaskStages(task),\n        ])\n            .then(() => updateTask(context.courier, taskId, getTaskPayload(task)))\n            .then(() => {\n                fetchTaskAndUpdateState();\n                context.setSnackbarState({\n                    open: true,\n                    message: \"Задание успешно обновлено\",\n                });\n            })\n            .catch((error: Error) => {\n                // rollback status\n                task.status = prevStatus;\n                let message = \"Не удалось обновить задание\";\n                if (error instanceof NoStagesException) {\n                    message = \"Заполнение этапов обязательно\";\n                }\n                context.setSnackbarState({ open: true, message });\n                context.setSnackbarError(true);\n            });\n    }, [addTaskStages, context, task, taskId, templates, fetchTaskAndUpdateState]);\n\n    function onTaskWithdrawClick() {\n        if (task.status === ETaskStatus.IN_PROGRESS) {\n            task.status = ETaskStatus.ON_CHECK;\n        }\n        updateTask(context.courier, taskId, getTaskPayload(task))\n            .then(() => {\n                fetchTaskAndUpdateState();\n                context.setSnackbarState({\n                    open: true,\n                    message: \"Задание успешно отозвано\",\n                });\n            })\n            .catch(() => {\n                context.setSnackbarState({ open: true, message: \"Не удалось отозвать задание\" });\n                context.setSnackbarError(true);\n            });\n        onMenuClose();\n    }\n\n    function onTaskCompleteClick() {\n        if (task.status === ETaskStatus.IN_PROGRESS || task.status === ETaskStatus.ON_CHECK) {\n            task.status = ETaskStatus.COMPLETED;\n        }\n        updateTask(context.courier, taskId, getTaskPayload(task))\n            .then(() => {\n                fetchTaskAndUpdateState();\n                context.setSnackbarState({\n                    open: true,\n                    message: \"Задание успешно звершено\",\n                });\n            })\n            .catch(() => {\n                context.setSnackbarState({ open: true, message: \"Не удалось завершить задание\" });\n                context.setSnackbarError(true);\n            });\n        onMenuClose();\n    }\n\n    function onOpenSendMessageModel() {\n        onMenuClose();\n        setMessageModalOpen(true);\n    }\n\n    function onSubmitSendMessage(title: string, message: string) {\n        sendPushToken(context.courier, { title, body: message })\n            .then(() => {\n                setMessageModalOpen(false);\n                context.setSnackbarState({ open: true, message: \"Сообщение успешно отправлено\" });\n            })\n            .catch(() => {\n                setMessageModalOpen(false);\n                context.setSnackbarState({ open: true, message: \"Не удалось отправить сообщениу\" });\n                context.setSnackbarError(true);\n            });\n    }\n\n    function onMessageModalClose() {\n        setMessageModalOpen(false);\n    }\n\n    const onAddTaskDocument = useCallback(\n        (document: File) => {\n            addTaskDocument(context.courier, taskId, document)\n                .then(() => fetchTaskAndUpdateState())\n                .catch(() => {\n                    context.setSnackbarState({ open: true, message: \"Не удалось сохранить файл\" });\n                    context.setSnackbarError(true);\n                });\n        },\n        [context, taskId, fetchTaskAndUpdateState],\n    );\n\n    const onDeleteTaskDocument = useCallback(\n        (documentId: number) => {\n            deleteTaskDocument(context.courier, taskId, documentId)\n                .then(() => fetchTaskAndUpdateState())\n                .catch(() => {\n                    context.setSnackbarState({ open: true, message: \"Не удалось удалить файл\" });\n                    context.setSnackbarError(true);\n                });\n        },\n        [context, taskId, fetchTaskAndUpdateState],\n    );\n\n    const onAddComment = useCallback(\n        (comment: IComment) => {\n            addComment(context.courier, taskId, comment.idAssignment, comment.text)\n                .then(() => fetchTaskAndUpdateState())\n                .catch(() => {\n                    context.setSnackbarState({\n                        open: true,\n                        message: \"Не удалось добавить комментарий\",\n                    });\n                    context.setSnackbarError(true);\n                });\n        },\n        [context, taskId, fetchTaskAndUpdateState],\n    );\n\n    const onDeleteComment = useCallback(\n        (commentId: number) => {\n            deleteComment(context.courier, taskId, commentId)\n                .then(() => fetchTaskAndUpdateState())\n                .catch(() => {\n                    context.setSnackbarState({\n                        open: true,\n                        message: \"Не удалось удалить комментарий\",\n                    });\n                    context.setSnackbarError(true);\n                });\n        },\n        [context, taskId, fetchTaskAndUpdateState],\n    );\n\n    return (\n        <SectionLayout>\n            <SimpleModal width={370} open={messageModalOpen} onClose={onMessageModalClose}>\n                <SendMessageForm onSubmit={onSubmitSendMessage} />\n            </SimpleModal>\n            {redirect.trigger && <Redirect to={redirect.to} noThrow />}\n            <SectionTitle title=\"Информация о задании\">\n                <Grid item>\n                    <Grid container>\n                        <Grid item>\n                            {isTaskEditable(task) && (\n                                <Button\n                                    variant=\"contained\"\n                                    scheme=\"blue\"\n                                    css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                                    onClick={onTaskSaveCallback}\n                                >\n                                    <SendIcon />\n                                    <Typography>Отправить</Typography>\n                                </Button>\n                            )}\n                        </Grid>\n                        {task.status !== ETaskStatus.DRAFT && (\n                            <React.Fragment>\n                                <Grid item>\n                                    <IconButton onClick={onMenuClick}>\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                </Grid>\n                                <Menu\n                                    keepMounted\n                                    open={Boolean(menuAnchorElement)}\n                                    anchorEl={menuAnchorElement}\n                                    onClose={onMenuClose}\n                                >\n                                    <MenuItem onClick={onTaskReportClick}>\n                                        Посмотреть отчет\n                                    </MenuItem>\n                                    <MenuItem onClick={onTaskHistoryClick}>\n                                        Посмотреть историю\n                                    </MenuItem>\n                                    {task.status === ETaskStatus.IN_PROGRESS && (\n                                        <MenuItem onClick={onTaskWithdrawClick}>\n                                            Отозвать задание\n                                        </MenuItem>\n                                    )}\n                                    {task.status !== ETaskStatus.COMPLETED && (\n                                        <MenuItem onClick={onTaskCompleteClick}>\n                                            Завершить задание\n                                        </MenuItem>\n                                    )}\n                                    <MenuItem onClick={onOpenSendMessageModel}>\n                                        Отправить сообщение\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </Grid>\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <TaskEditor<IExtendedTask>\n                    users={users}\n                    task={task}\n                    regions={marketplaceRegions}\n                    cities={regionCities}\n                    formats={cityFormats}\n                    addresses={formatAddresses}\n                    templates={isTaskEditable(task) ? templates : task.templates}\n                    variant=\"view\"\n                    onTaskChange={onTaskChange}\n                    onDeleteAsset={onDeleteTaskDocument}\n                    onAddAsset={onAddTaskDocument}\n                    onAddComment={onAddComment}\n                    onDeleteComment={onDeleteComment}\n                />\n            </Grid>\n        </SectionLayout>\n    );\n};\n\nexport default ViewTask;\n\nfunction getTaskPayload(task: IExtendedTask) {\n    return _.omit(task, [\"id\", \"templates\", \"stages\", \"documents\"]);\n}\n"],"sourceRoot":""}